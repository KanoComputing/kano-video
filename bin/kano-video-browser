#!/usr/bin/kano-splash /usr/share/kano-video/media/images/splash.png /usr/bin/env python

# Copyright (C) 2015 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU GPL v2
#
# Command line wrapper to Kano Video Midori version to watch YouTube videos
#

from kano.gtk3.kano_dialog import KanoDialog
from kano.utils import run_cmd, get_home
from kano_settings.config_file import get_setting
import shutil

import os
import sys

if __name__ == '__main__' and __package__ is None:
    dir_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
    if dir_path != '/usr':
        sys.path.insert(1, dir_path)

try:
    from kano_profile.tracker import Tracker
    kanotracker = Tracker()
except:
    pass


def jackd_running():
    try:
        pid = os.popen('pidof jackd').read()
        if len(pid):
            return True
    except:
        pass

    return False


def jackd_start(jackd='jackd -p32 -dalsa -dhw:0,0 -p1024 -n3 -s'):
    # Start jackd in the background, discarding console output
    cmdline = '/bin/bash -c "{} > /dev/null 2>&1" & '.format(jackd)
    rc = os.system(cmdline)
    return (rc == 0)


def jackd_stop():
    run_cmd('pkill jackd')


def main():
    jackd_started = False
    youtube_url = 'http://youtube.com'
    midori_skel = '/usr/share/kano-video/midori_skel'
    midori_config_dir = '.config/midori/customconfig'

    # Make sure jackd is up and running
    if not jackd_running():
        jackd_started = True
        jackd_start()

    # Configuration directory contains Midori per-user cookies and extra stuff
    full_path = os.path.join(get_home(), midori_config_dir)
    if not os.path.isdir(midori_config_dir):
        try:
            shutil.copytree(midori_skel, midori_config_dir)
        except:
            print 'Error copying Midori user skeleton {}'.format(midori_skel)

    # FIXME: Midori -c seems to detach itself from the terminal and we lose control
    run_cmd('midori -c {} "{}"'.format(full_path, youtube_url))

    if jackd_started:
        jackd_stop()


if __name__ == '__main__':

    # This app cannot be sudoed, because we instruct Midori to pull user settings
    if os.getuid() == 0:
        print 'This app cannot be run as root, please start it from the Desktop'
        exit(1)

    # Check if parental control is in Ultimate mode (3)
    if get_setting('Parental-level') == 3:
        head = 'Whoops!'
        msg = "I can\'t show you videos because my parental settings are" \
            "turned on."
        dialog = KanoDialog(
            head,
            msg,
            {
                "OK": {
                    "return_value": True,
                    "color": "green"
                },
            },
        )
        dialog.run()
        exit(0)

    # If there are VNC connected clients, show a warning message
    if os.path.isfile('/usr/bin/kano-vnc'):
        _, _, rc = run_cmd('/usr/bin/kano-vnc clients')
        if rc == 0:
            msg = 'YouTube videos over a VNC session will be played slowly'
            kdialog = KanoDialog(
                title_text='VNC Warning',
                description_text=msg)
            response = kdialog.run()

    main()
