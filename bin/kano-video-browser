#!/usr/bin/kano-splash /usr/share/kano-video/media/images/splash.png /usr/bin/env python

# Copyright (C) 2015 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU GPL v2
#
# Command line wrapper to Kano Video Chromium version to watch YouTube videos
#

from kano.gtk3.kano_dialog import KanoDialog
from kano.utils import run_cmd, get_home, is_model_2_b
from kano.logging import logger
from kano_settings.system.advanced import get_parental_level

from gi.repository import Gtk
import shutil
import os
import sys

if __name__ == '__main__' and __package__ is None:
    dir_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
    if dir_path != '/usr':
        sys.path.insert(1, dir_path)

try:
    from kano_profile.tracker import Tracker
    kanotracker = Tracker()
except:
    pass


def main():

    # Launch Chromium youtube mode
    run_cmd("chromium --window-size=900,650 --app=http://www.youtube.com")


if __name__ == '__main__':

    # This app cannot be sudoed, because we instruct Chromium
    # to pull user settings
    if os.getuid() == 0:
        logger.error('This app cannot be run as root, please start it from the Desktop')
        exit(1)

    # Check if parental control is in Ultimate mode (3)
    if get_parental_level() == 3:
        # Close splash before launching dialogue
        os.system('kano-stop-splash')
        head = 'Whoops!'
        msg = "I can\'t show you videos because my parental settings are" \
            " turned on."
        dialog = KanoDialog(head, msg)
        dialog.run()
        exit(0)

    # Check if not RPi2
    if not is_model_2_b():
        # Close splash before launching dialogue
        os.system('kano-stop-splash')
        head = 'Powerup!'
        msg = "Playing video uses all of my brainpower, and sometimes" \
            " it\'s hard for me to keep up. I\'ll try, but for the best" \
            " experience upgrade my brain and get all the new powers! \n" \
            "Visit: http://powerup.kano.me/"
        dialog = KanoDialog(head, msg)
        dialog.run()

        # This is to force the dialog to close on clicking OK
        while Gtk.events_pending():
            Gtk.main_iteration()

    # If there are VNC connected clients, show a warning message
    if os.path.isfile('/usr/bin/kano-vnc'):
        _, _, rc = run_cmd('/usr/bin/kano-vnc clients')
        if rc == 0:
            # Close splash before launching dialogue
            os.system('kano-stop-splash')
            msg = 'YouTube videos over a VNC session will be played slowly'
            kdialog = KanoDialog(
                title_text='VNC Warning',
                description_text=msg)
            kdialog.run()

            # This is to force the dialog to close on clicking OK
            while Gtk.events_pending():
                Gtk.main_iteration()

    main()
